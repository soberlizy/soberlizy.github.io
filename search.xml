<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue3响应式原理是怎么实现的？</title>
      <link href="/2022/03/04/vue3%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%E7%9A%84%EF%BC%9F/"/>
      <url>/2022/03/04/vue3%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%E7%9A%84%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>在本文中，我们首先会讨论什么是响应式数据和副作用函数，然后尝试实现一个相对完善的响应式系统，在这个过程中，我们会遇到各种各样的问题，例如如何避免无限递归？为什么需要嵌套的副作用函数？两个副作用函数之间会产生哪些影响？以及其他很多需要考虑的细节。接着我们会讨论与响应式数据相关的内容。接下来我们就从认识响应式数据和副作用函数开始，一步步的了解vue3的响应式系统的设计与实现。</p><h1 id="1、响应式数据与副作用函数"><a href="#1、响应式数据与副作用函数" class="headerlink" title="1、响应式数据与副作用函数"></a>1、响应式数据与副作用函数</h1><p>副作用函数指的是会产生副作用的函数，如下的代码所示：</p><pre><code class="javascript"> function effect()&#123;    document.getElementById(&#39;div&#39;).innerText =obj.text  &#125;</code></pre><p>当effect函数执行时，他会设置body的文本内容，但除了effet函数之外的人任何函数都可以读取或者设置body的文本内容，也就是说，effect函数的执行，会直接或间接的影响其他函数的执行，这时我们说effect函数产生了副作用，副作用很容易产生，例如一个函数修改了全局变量，这也是一个副作用，如下面的代码所示：</p><pre><code class="javascript">// 全局变量let val = 1function effect()&#123;  val = 2 //修改全局变量 产生副作用&#125;</code></pre><p>理解了什么副作用函数，再来说说为什么是响应式函数。假设在一个副作用函数中读取了某个对象的属性：</p><pre><code class="javascript">const obj = &#123;text:&#39;hello word&#39;&#125;function effect()&#123;  //effect 函数的执行会读取 obj.text   document.getElementById(&#39;div&#39;).innerText =obj.text&#125;</code></pre><p>如上代码所示，副作用函数effect会设置div元素的innerText属性。其值为obj.text，当obj.text发生改变的时候，我们希望副作用函数</p><p>effect也重新执行。</p><pre><code>obj.text = &#39;hello vue3&#39; //修改了obj.text的值，同时希望副作用函数也执行。</code></pre><h1 id="2、响应式数据的基本实现"><a href="#2、响应式数据的基本实现" class="headerlink" title="2、响应式数据的基本实现"></a>2、响应式数据的基本实现</h1><p>接着上文，如何让obj成为一个响应式数据呢？通过观察我们能发现两个线索：</p><ul><li>副作用函数effect执行时，会触发obj.text的<strong>读取</strong>操作</li><li>修改obj.text的值的时候，会触发obj.text的<strong>设置</strong>操作。</li></ul><p>当我们能够拦截一个对象的读写操作的时候，事情就会变得简单了，当读取字段obj.text时，我们可以把副作用函数effect存储到一个”<strong>桶</strong>˙“中</p><p>接着，当设置obj.text时，再把副作用函数从“桶”中提出来执行即可。</p>]]></content>
      
      
      
        <tags>
            
            <tag> vue3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS和HTML这些会吗？</title>
      <link href="/2022/03/04/CSS%E5%92%8CHTML%E8%BF%99%E4%BA%9B%E4%BC%9A%E5%90%97%EF%BC%9F/"/>
      <url>/2022/03/04/CSS%E5%92%8CHTML%E8%BF%99%E4%BA%9B%E4%BC%9A%E5%90%97%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>js基础这些你能答上来吗？</title>
      <link href="/2022/03/04/js%E5%9F%BA%E7%A1%80%E8%BF%99%E4%BA%9B%E4%BD%A0%E8%83%BD%E7%AD%94%E4%B8%8A%E6%9D%A5%E5%90%97%EF%BC%9F/"/>
      <url>/2022/03/04/js%E5%9F%BA%E7%A1%80%E8%BF%99%E4%BA%9B%E4%BD%A0%E8%83%BD%E7%AD%94%E4%B8%8A%E6%9D%A5%E5%90%97%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>你真的理解promise吗？</title>
      <link href="/2022/03/04/%E4%BD%A0%E7%9C%9F%E7%9A%84%E7%90%86%E8%A7%A3promise%E5%90%97%EF%BC%9F/"/>
      <url>/2022/03/04/%E4%BD%A0%E7%9C%9F%E7%9A%84%E7%90%86%E8%A7%A3promise%E5%90%97%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
